import os
import logging
import threading
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes

# Logging ‡§∏‡•á‡§ü‡§Ö‡§™, ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ‡•á‡§Ç ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§™‡§∞ ‡§™‡§§‡§æ ‡§ö‡§≤‡•á ‡§ï‡§ø ‡§¨‡•â‡§ü ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- ‡§ö‡•à‡§®‡§≤ ‡§≤‡§ø‡§Ç‡§ï ‡§ï‡•â‡§®‡•ç‡§´‡§º‡§ø‡§ó‡§∞‡•á‡§∂‡§® ---
# ‡§Ø‡§π ‡§∏‡§¨‡§∏‡•á ‡§ú‡§º‡§∞‡•Ç‡§∞‡•Ä ‡§π‡§ø‡§∏‡•ç‡§∏‡§æ ‡§π‡•à‡•§
# 'key': ‡§Ø‡§π ‡§µ‡•ã ‡§Ø‡•Ç‡§®‡§ø‡§ï ‡§Ü‡§à‡§°‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§Ü‡§™ /start ‡§≤‡§ø‡§Ç‡§ï ‡§Æ‡•á‡§Ç ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á (‡§ú‡•à‡§∏‡•á ?start=hanime)
# 'link': ‡§Ø‡§π ‡§â‡§∏ ‡§ö‡•à‡§®‡§≤ ‡§ï‡§æ ‡§Ö‡§∏‡§≤‡•Ä ‡§™‡•ç‡§∞‡§æ‡§á‡§µ‡•á‡§ü ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§≤‡§ø‡§Ç‡§ï ‡§π‡•à‡•§

CHANNEL_LINKS = {
    "danime": "https://t.me/+mUBQJuyB5FNlMTVl",   # ‡§Ø‡§π‡§æ‡§Å hanime ‡§ö‡•à‡§®‡§≤ ‡§ï‡§æ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§≤‡§ø‡§Ç‡§ï ‡§°‡§æ‡§≤‡•á‡§Ç
    "hentai": "https://t.me/+ypMzwwRrx1I1NGZl",   # ‡§Ø‡§π‡§æ‡§Å parody ‡§ö‡•à‡§®‡§≤ ‡§ï‡§æ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§≤‡§ø‡§Ç‡§ï ‡§°‡§æ‡§≤‡•á‡§Ç
    "parody": "https://t.me/+G_BZgtePcARkN2M1",  # ‡§Ø‡§π‡§æ‡§Å manga18+ ‡§ö‡•à‡§®‡§≤ ‡§ï‡§æ ‡§ú‡•ç‡§µ‡§æ‡§á‡§® ‡§≤‡§ø‡§Ç‡§ï ‡§°‡§æ‡§≤‡•á‡§Ç
    
    # --- ‡§®‡§è ‡§ö‡•à‡§®‡§≤ ‡§ê‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ---
    # "new_channel_key": "https://t.me/your_new_channel_join_link",
    # "another_key": "https://t.me/another_join_link",
}

# --- ‡§¨‡•â‡§ü ‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® ---

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """‡§Ø‡§π ‡§´‡§Ç‡§ï‡•ç‡§∂‡§® /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§™‡§∞ ‡§ö‡§≤‡§§‡§æ ‡§π‡•à‡•§"""
    args = context.args

    if args:
        # ‡§Ö‡§ó‡§∞ /start ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡•ã‡§à ‡§ï‡•Ä (key) ‡§≠‡•á‡§ú‡•Ä ‡§ó‡§à ‡§π‡•à (‡§ú‡•à‡§∏‡•á ?start=hanime)
        channel_key = args[0]
        join_link = CHANNEL_LINKS.get(channel_key)

        if join_link:
            # ‡§Ö‡§ó‡§∞ key ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§°‡§ø‡§ï‡•ç‡§∂‡§®‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§π‡•à, ‡§§‡•ã ‡§¨‡§ü‡§® ‡§¨‡§®‡§æ‡§è‡§Å
            message_text = "Here is your link! Click below to proceed:"
            button_text = "üîî Request to Join"
            
            keyboard = [[InlineKeyboardButton(button_text, url=join_link)]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await update.message.reply_text(message_text, reply_markup=reply_markup)
        else:
            # ‡§Ö‡§ó‡§∞ key ‡§Æ‡•å‡§ú‡•Ç‡§¶ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à
            await update.message.reply_text("This link seems to be invalid or expired. Please try again from our main channel.")
    else:
        # ‡§Ö‡§ó‡§∞ ‡§ï‡§ø‡§∏‡•Ä ‡§®‡•á ‡§∏‡•Ä‡§ß‡•á ‡§¨‡•â‡§ü ‡§ï‡•ã /start ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à
        await update.message.reply_text("Welcome! Please use a link from one of our channels to get access.")

# --- Render.com ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡•á‡§¨ ‡§∏‡§∞‡•ç‡§µ‡§∞ (‡§á‡§∏‡•á 24/7 ‡§ú‡§ó‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è) ---
app = Flask(__name__)

@app.route('/')
def index():
    return "Bot is alive and running!"

# --- ‡§¨‡•â‡§ü ‡§î‡§∞ ‡§µ‡•á‡§¨ ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§ï‡•ã ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡§æ ‡§ï‡•ã‡§° ---

def main():
    # ‡§è‡§®‡§µ‡§æ‡§Ø‡§∞‡§®‡§Æ‡•á‡§Ç‡§ü ‡§∏‡•á ‡§¨‡•â‡§ü ‡§ü‡•ã‡§ï‡§® ‡§≤‡•á‡§Ç
    BOT_TOKEN = os.environ.get("BOT_TOKEN")
    if not BOT_TOKEN:
        logger.error("FATAL: BOT_TOKEN environment variable not set.")
        return

    # Telegram ‡§è‡§™‡•ç‡§≤‡•Ä‡§ï‡•á‡§∂‡§® ‡§∏‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
    application = Application.builder().token(BOT_TOKEN).build()

    # /start ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡•à‡§Ç‡§°‡§≤‡§∞ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    application.add_handler(CommandHandler("start", start))

    # ‡§¨‡•â‡§ü ‡§ï‡•ã ‡§è‡§ï ‡§Ö‡§≤‡§ó ‡§•‡•ç‡§∞‡•á‡§° ‡§Æ‡•á‡§Ç ‡§ö‡§≤‡§æ‡§è‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§µ‡•á‡§¨ ‡§∏‡§∞‡•ç‡§µ‡§∞ ‡§¨‡•ç‡§≤‡•â‡§ï ‡§® ‡§π‡•ã
    threading.Thread(target=application.run_polling, daemon=True).start()
    
    logger.info("Telegram Bot has started polling...")
    
    # ‡§Ø‡§π 'app' ‡§ë‡§¨‡•ç‡§ú‡•á‡§ï‡•ç‡§ü Gunicorn ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ Render ‡§™‡§∞ ‡§ö‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§
    # ‡§≤‡•ã‡§ï‡§≤ ‡§ü‡•á‡§∏‡•ç‡§ü‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§Ü‡§™ app.run() ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§

# Gunicorn ‡§ï‡•ã 'app' ‡§ë‡§¨‡•ç‡§ú‡•á‡§ï‡•ç‡§ü ‡§ï‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡§§ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§á‡§∏‡§≤‡§ø‡§è ‡§á‡§∏‡•á ‡§ó‡•ç‡§≤‡•ã‡§¨‡§≤ ‡§∏‡•ç‡§ï‡•ã‡§™ ‡§Æ‡•á‡§Ç ‡§∞‡§ñ‡§§‡•á ‡§π‡•à‡§Ç
main()